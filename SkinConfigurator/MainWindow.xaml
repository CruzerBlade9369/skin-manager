<Window x:Class="SkinConfigurator.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:local="clr-namespace:SkinConfigurator"
        xmlns:model="clr-namespace:SkinConfigurator.ViewModels"
        xmlns:json="clr-namespace:SMShared.Json"
        mc:Ignorable="d"
        Title="Skin Packager" Height="600" Width="1000"
        d:DataContext="{d:DesignInstance {x:Type model:MainWindowViewModel}}">
    <Window.Resources>
        <ObjectDataProvider x:Key="componentTypes" ObjectType="{x:Type sys:Enum}" MethodName="GetValues">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="model:PackComponentType"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="defaultThemeTypes" ObjectType="{x:Type sys:Enum}" MethodName="GetValues">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="json:BaseTheme"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
    </Window.Resources>

    <DockPanel LastChildFill="True" Background="{x:Static SystemColors.ControlBrush}" >
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="File">
                <MenuItem x:Name="CreatePackButton" Header="New Project" Click="CreatePackButton_Click" ToolTip="Clear all fields and start anew"/>
                <MenuItem x:Name="ImportPackButton" Header="Open Folder..." Click="ImportPackButton_Click" ToolTip="Import multiple skins from a folder"/>
                <MenuItem x:Name="ImportZipButton" Header="Open Zip..." Click="ImportZipButton_Click" ToolTip="Import skins from a zipped skin pack"/>
            </MenuItem>
            
            <MenuItem x:Name="SettingsButton" Header="Settings..." Click="SettingsButton_Click"/>
        </Menu>

        <Grid Margin="5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1.5*"/>
                <ColumnDefinition Width="3*"/>
                <ColumnDefinition Width="3*"/>
            </Grid.ColumnDefinitions>

            <!-- Main mod info -->
            <DockPanel LastChildFill="False" Grid.RowSpan="2">
                <StackPanel DataContext="{Binding SkinPack.ModInfoModel}" DockPanel.Dock="Top" FocusManager.IsFocusScope="True">
                    <Label Content="Pack Config:"/>

                    <Label Content="Pack Name"/>
                    <TextBox Text="{Binding DisplayName, UpdateSourceTrigger=PropertyChanged}"/>

                    <Label Content="Version" Grid.Row="1"/>
                    <TextBox Text="{Binding Version, UpdateSourceTrigger=PropertyChanged}"/>

                    <Label Content="Author" Grid.Row="2"/>
                    <TextBox Text="{Binding Author, UpdateSourceTrigger=PropertyChanged}"/>
                </StackPanel>

                <Button x:Name="PackageButton" DockPanel.Dock="Bottom" Content="Zip for Release..." Click="PackageButton_Click" 
                    ToolTip="Create a Zip file that can be installed with UMM"
                    IsEnabled="{Binding SkinPack.IsValid}"
                    Background="#FF94E2A4" Padding="0,10"/>

                <Button x:Name="TestPackButton" DockPanel.Dock="Bottom" Content="Install Unzipped..." Click="TestPackButton_Click"
                    ToolTip="Save the pack directly to a folder or mods directory (bypass UMM)"
                    IsEnabled="{Binding SkinPack.IsValid}"
                    Background="#FFFFFF80" Padding="0,10"/>
            </DockPanel>

            <GridSplitter Grid.Column="1" Width="7" HorizontalAlignment="Left"/>


            <!-- Individual Skins -->
            <DockPanel Grid.Column="1" Grid.Row="0" LastChildFill="True" Margin="7,0,0,0">
                <Grid DockPanel.Dock="Top">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Label Content="Skins:"/>
                    <Button Grid.Column="1" Content="Upgrade" Click="UpgradeSkinButton_Click" ToolTip="Upgrade all Overhauled filenames to the Simulator versions"
                            IsEnabled="{Binding SelectedSkin.CanUpgrade, FallbackValue=False}"/>
                    <Button Grid.Column="2" Content="Remove" Click="RemoveSkinButton_Click" ToolTip="Delete the selected skin/resource"
                            IsEnabled="{Binding SelectedSkin, Mode=OneWay, Converter={StaticResource nullBoolConverter}, FallbackValue=False}"/>
                    <Button Grid.Row="1" Grid.Column="0" Content="New" Click="NewSkinButton_Click" ToolTip="Add a new empty skin/resource folder"/>
                    <Button Grid.Row="1" Grid.Column="1" Content="Import..." Click="AddSkinButton_Click" ToolTip="Import an existing skin folder"/>
                    <Button Grid.Row="1" Grid.Column="2" Content="Multi Import..." Click="AddManySkinButton_Click" ToolTip="Import several skin folders at once"/>
                </Grid>

                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    
                    <!-- Pack Component List -->
                    <DataGrid ItemsSource="{Binding SkinPack.PackComponents}" d:ItemsSource="{d:SampleData}"
                              AutoGenerateColumns="False" RowHeaderWidth="0"
                              SelectionMode="Single" SelectionUnit="FullRow"
                              CanUserAddRows="False" Background="White"
                              SelectedItem="{Binding SelectedSkin}" FocusManager.IsFocusScope="True">
                        <DataGrid.Resources>
                            <local:PackComponentTypeVisibilityConverter x:Key="skinToThemeVisibility" VisibleValue="Skin"/>
                        </DataGrid.Resources>
                        <DataGrid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Upgrade" Click="UpgradeSkinButton_Click" ToolTip="Rename the files in this folder to match the current game data"
                                          Visibility="{Binding SelectedSkin.CanUpgrade, Converter={StaticResource boolToCollapseConverter}}"/>
                                <MenuItem x:Name="SkinContextAddThemeButton" Header="Create Theme Config" Click="AddThemeConfigButton_Click"
                                          ToolTip="Create a theme configuration for this skin"
                                          Visibility="{Binding SelectedSkin.Type, Converter={StaticResource skinToThemeVisibility}}"/>
                                <MenuItem Header="Remove" Click="RemoveSkinButton_Click" ToolTip="Remove this folder from the project"/>
                            </ContextMenu>
                        </DataGrid.ContextMenu>
                        <DataGrid.CellStyle>
                            <Style TargetType="DataGridCell">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CanUpgrade}" Value="True">
                                        <Setter Property="Background" Value="#FFFFFF80"/>
                                    </DataTrigger>
                                </Style.Triggers>
                                <Setter Property="AllowDrop" Value="True"/>
                            </Style>
                        </DataGrid.CellStyle>
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Folder Type" Binding="{Binding Type}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="Car ID" Binding="{Binding CarId}" IsReadOnly="True"/>
                            <DataGridTextColumn Width="*" Header="Name" Binding="{Binding Name}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="Files" Binding="{Binding Items.Count, Mode=OneWay}" IsReadOnly="True"/>
                        </DataGrid.Columns>
                    </DataGrid>

                    <GridSplitter Grid.Row="1" Height="7" VerticalAlignment="Top" HorizontalAlignment="Stretch" ResizeDirection="Rows"/>

                    <!-- Theme Config -->
                    <DockPanel Grid.Row="1" LastChildFill="True" Margin="0,7,0,0">
                        <UniformGrid Columns="4" DockPanel.Dock="Top">
                            <Label Content="Theme Config:" DockPanel.Dock="Top"
                                   ToolTip="Settings that are applied to all skins with the same name"/>
                            <Button x:Name="AddThemeConfigButton" Content="New" Click="AddThemeConfigButton_Click"
                                    ToolTip="Create an empty theme config"/>
                            <Button x:Name="ImportThemeConfigButton" Content="Import..." Click="ImportThemeConfigButton_Click"
                                    ToolTip="Import an existing theme_config.json file"/>
                            <Button x:Name="RemoveThemeConfigButton" Content="Remove" Click="RemoveThemeConfigButton_Click"
                                    ToolTip="Delete the selected theme config"
                                    IsEnabled="{Binding SelectedThemeConfig, Converter={StaticResource nullBoolConverter}, FallbackValue=False}"/>
                        </UniformGrid>

                        <ListView x:Name="ThemeConfigList" ItemsSource="{Binding SkinPack.ThemeConfigs}" d:ItemsSource="{d:SampleData}"
                                  SelectedItem="{Binding SelectedThemeConfig}" HorizontalContentAlignment="Stretch" FocusManager.IsFocusScope="True"
                                  ScrollViewer.CanContentScroll="False" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                            <ListView.ItemTemplate>
                                <ItemContainerTemplate DataType="model:ThemeConfigModel">
                                    <local:ThemeConfigEditor HorizontalAlignment="Stretch" RemoveClicked="RemoveThemeConfigButton_Click"/>
                                </ItemContainerTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                    </DockPanel>
                </Grid>
            </DockPanel>

            <GridSplitter Grid.Column="2" Width="7" HorizontalAlignment="Left"/>
            
            <!--<DockPanel LastChildFill="True" Grid.Row="0" Grid.Column="2" IsEnabled="{Binding SelectedSkin, Converter={StaticResource nullBoolConverter}, FallbackValue=False}" Margin="7,0,0,0">-->
            <Grid Grid.Row="0" Grid.Column="2" Margin="7,0,0,0"
                  IsEnabled="{Binding SelectedSkin, Mode=OneWay, Converter={StaticResource nullBoolConverter}, FallbackValue=False}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                
                <!-- Skin Properties -->
                <Label Content="Type" Grid.Column="0"/>
                <ComboBox SelectedValue="{Binding SelectedSkin.Type, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding Source={StaticResource componentTypes}}" Grid.Column="1"
                          ToolTip="Skins can be applied directly to vehicles. Resources allow sharing files between multiple skins"/>

                <Label Content="Name" Grid.Row="2" Grid.Column="0"/>
                <TextBox Text="{Binding SelectedSkin.Name, UpdateSourceTrigger=PropertyChanged}" Grid.Row="2" Grid.Column="1"/>

                <Label Content="Car ID" Grid.Row="1" Grid.Column="0"/>
                <Grid Grid.Row="1" Grid.Column="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBox Text="{Binding SelectedSkin.CarId, UpdateSourceTrigger=PropertyChanged}" />
                    <Button x:Name="SelectCarTypeButton" Content=" Defaults... " Click="SelectCarTypeButton_Click" Grid.Column="2"/>
                </Grid>

                <Label Content="Base Theme" Grid.Row="3" Grid.Column="0" Visibility="{Binding SelectedSkin.HasResources, Converter={StaticResource boolToCollapseConverter}}"/>
                <ComboBox Grid.Row="3" Grid.Column="1" IsEditable="False" ItemsSource="{Binding Source={StaticResource defaultThemeTypes}}" SelectedItem="{Binding SelectedSkin.BaseTheme}"
                          Visibility="{Binding SelectedSkin.HasResources, Converter={StaticResource boolToCollapseConverter}}"/>

                <Label Content="Resources" Grid.Row="4" Grid.Column="0" Visibility="{Binding SelectedSkin.HasResources, Converter={StaticResource boolToCollapseConverter}}"/>
                <local:ResourceSelector x:Name="MyResourceSelector" Grid.Row="4" Grid.Column="2"
                                        Visibility="{Binding SelectedSkin.HasResources, Converter={StaticResource boolToCollapseConverter}}"
                                        SkinPack="{Binding SkinPack}" Skin="{Binding SelectedSkin}"
                                        ToolTip="Select common files to be used by this skin"/>

                <!-- Skin Items -->
                <Label Content="Skin Files:" Grid.Row="5" Grid.Column="0" Margin="0,7,0,0"/>
                <UniformGrid Columns="3" Grid.Row="5" Grid.Column="1" Margin="0,7,0,0">
                    <Button x:Name="AddFileButton" Content="Add..." Click="AddFileButton_Click"/>
                    <Button x:Name="ReplaceFileButton" Content="Replace..." Click="ReplaceFileButton_Click"
                            IsEnabled="{Binding SelectedSkinFile, Converter={StaticResource nullBoolConverter}, FallbackValue=False}"/>
                    <Button x:Name="RemoveFileButton" Content="Remove" Click="RemoveFileButton_Click"
                            IsEnabled="{Binding SelectedSkinFile, Converter={StaticResource nullBoolConverter}, FallbackValue=False}"/>
                </UniformGrid>
                
                <ListView x:Name="SkinFileList" DockPanel.Dock="Bottom" ItemsSource="{Binding SelectedSkin.Items}" d:ItemsSource="{d:SampleData}"
                          SelectedItem="{Binding SelectedSkinFile}" FocusManager.IsFocusScope="True" AllowDrop="True"
                          Grid.Row="6" Grid.ColumnSpan="2">
                    <ListView.Resources>
                        <ContextMenu x:Key="SkinFileContextMenu">
                            <MenuItem Header="Replace..." Click="ReplaceFileButton_Click"/>
                            <MenuItem Header="Remove" Click="RemoveFileButton_Click"/>
                        </ContextMenu>
                    </ListView.Resources>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.ItemTemplate>
                        <ItemContainerTemplate DataType="model:SkinFileModel">
                            <Grid ContextMenu="{StaticResource SkinFileContextMenu}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <Image Width="64px" Height="64px" Source="{Binding Preview}"/>
                                <UniformGrid Rows="2" Grid.Column="1">
                                    <local:SpecialCombo IsEditable="True" Text="{Binding FileName, UpdateSourceTrigger=LostFocus}" 
                                              ItemsSource="{Binding Path=DataContext.DefaultTextureNames, RelativeSource={RelativeSource AncestorType=ListView}, Mode=OneWay}"/>
                                    <Button Grid.Row="1" Content="Upgrade Filename" Click="UpgradeFileNameButton_Click" 
                                            Visibility="{Binding CanUpgradeFileName, Mode=OneWay, Converter={StaticResource boolToCollapseConverter}}"
                                            Background="PaleGoldenrod"/>
                                </UniformGrid>
                            </Grid>
                        </ItemContainerTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </Grid>

            <GridSplitter Grid.Column="3" Width="7" HorizontalAlignment="Left"/>
            
            
        </Grid>
    </DockPanel>
</Window>
